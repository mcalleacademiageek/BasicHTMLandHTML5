Applied Visual Design: Use a Bezier Curve to Move a Graphic

A previous challenge discussed the ease-out keyword that describes an animation change that speeds up first and then slows down at the end of the animation. On the right, the difference between the ease-out keyword (for the blue element) and linear keyword (for the red element) is demonstrated. Similar animation progressions to the ease-out keyword can be achieved by using a custom cubic Bezier curve function.

In general, changing the p1 and p2 anchor points drives the creation of different Bezier curves, which controls how the animation progresses through time. Here's an example of a Bezier curve using values to mimic the ease-out style:

animation-timing-function: cubic-bezier(0, 0, 0.58, 1);

Remember that all cubic-bezier functions start with p0 at (0, 0) and end with p3 at (1, 1). In this example, the curve moves faster through the Y-axis (starts at 0, goes to p1 y value of 0, then goes to p2 y value of 1) than it moves through the X-axis (0 to start, then 0 for p1, up to 0.58 for p2). As a result, the change in the animated element progresses faster than the time of the animation for that segment. Towards the end of the curve, the relationship between the change in x and y values reverses - the y value moves from 1 to 1 (no change), and the x values move from 0.58 to 1, making the animation changes progress slower compared to the animation duration.

To see the effect of this Bezier curve in action, change the animation-timing-function of the element with id of red to a cubic-bezier function with x1, y1, x2, y2 values set respectively to 0, 0, 0.58, 1. This will make both elements progress through the animation similarly.


Diseño visual aplicado: utilice una curva de Bezier para mover un gráfico

Un desafío anterior discutió la palabra clave de salida que describe un cambio de animación que se acelera primero y luego se ralentiza al final de la animación. A la derecha, se demuestra la diferencia entre la palabra clave de salida (para el elemento azul) y la palabra clave lineal (para el elemento rojo). Se pueden lograr progresiones de animación similares a la palabra clave de salida mediante el uso de una función de curva de Bézier cúbica personalizada.

En general, cambiar los puntos de anclaje p1 y p2 impulsa la creación de diferentes curvas de Bézier, que controlan cómo avanza la animación a través del tiempo. A continuación, se muestra un ejemplo de una curva de Bezier que utiliza valores para imitar el estilo de salida:

animation-timing-function: cubic-bezier(0, 0, 0.58, 1);

Recuerde que todas las funciones de bezier cúbico comienzan con p0 en (0, 0) y terminan con p3 en (1, 1). En este ejemplo, la curva se mueve más rápido a través del eje Y (comienza en 0, va al valor p1 y de 0, luego va al valor p2 y de 1) que se mueve a través del eje X (0 para comenzar, luego 0 para p1, hasta 0,58 para p2). Como resultado, el cambio en el elemento animado progresa más rápido que el tiempo de la animación para ese segmento. Hacia el final de la curva, la relación entre el cambio en los valores de xey se invierte: el valor de y se mueve de 1 a 1 (sin cambios) y los valores de x se mueven de 0,58 a 1, lo que hace que los cambios de animación progresen más lentamente en comparación con la duración de la animación.

Para ver el efecto de esta curva de Bezier en acción, cambie la función de tiempo de animación del elemento con id de rojo a una función de bezier cúbico con valores x1, y1, x2, y2 establecidos respectivamente en 0, 0, 0.58, 1 Esto hará que ambos elementos avancen a través de la animación de manera similar.

